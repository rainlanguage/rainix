name: Rainix CI check shell
on: [push]

jobs:
  rainix-check-shell:
    strategy:
      matrix:
        os: [
            ubuntu-latest,
            # intel mac
            macos-13,
            # apple silicon
            macos-latest,
          ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          # restore and save a cache using this key
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          # if there's no cache hit, restore a cache by this prefix
          restore-prefixes-first-match: nix-${{ runner.os }}-
          # collect garbage until the Nix store size (in bytes) is at most this number
          # before trying to save a new cache
          # 1G = 1073741824
          gc-max-store-size-linux: 1G

      - run: nix develop --command cargo release --version
      - run: nix develop --command flamegraph --help
      - run: nix develop --command graph --version
      - run: nix develop --command goldsky --version
      - run: nix develop .#tauri-shell --command tauri-shellhook-test
