name: Rainix CI
on: [push]

jobs:
  rainix:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        task: [rainix-rs-test, rainix-rs-artifacts]
        include:
          # Solidity doesn't need to be tested on multiple platforms
          - os: ubuntu-latest
            task: rainix-sol-test
          - os: ubuntu-latest
            task: rainix-sol-static
          - os: ubuntu-latest
            task: rainix-sol-legal
          - os: ubuntu-latest
            task: rainix-sol-artifacts
          # We don't need to do rust static analysis on multiple platforms
          - os: ubuntu-latest
            task: rainix-rs-static
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      DEPLOYMENT_KEY: ${{ github.ref == 'refs/heads/main' && secrets.PRIVATE_KEY || secrets.PRIVATE_KEY_DEV }}
    defaults:
      run:
        working-directory: test/fixture
    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@v4
      - uses: DeterminateSystems/magic-nix-cache-action@v2

      - run: nix run ../..#rainix-sol-prelude
      - run: nix run ../..#rainix-rs-prelude
      - name: Run ${{ matrix.task }}
        env:
          ETH_RPC_URL: ${{ secrets.CI_DEPLOY_SEPOLIA_RPC_URL || vars.CI_DEPLOY_SEPOLIA_RPC_URL }}
          ETHERSCAN_API_KEY: ${{ secrets.EXPLORER_VERIFICATION_KEY }}
        run: nix run ../..#${{ matrix.task }}

      # Run on macOS only
      - name: Check tauri-shell PATH
        if: matrix.os == 'macos-latest'
        run: |
          nix develop .#tauri-shell -c bash -c '
            # Bail if /usr/bin is not in the PATH
            if echo "$PATH" | grep -qE "(^|:)/usr/bin(:|$)"; then
              echo "/usr/bin is in the PATH, ...OK"
            else
              echo "did NOT find any /usr/bin in the PATH, aborting..."
              exit 1
            fi

            # Bail if xcrun is in the PATH
            if echo "$PATH" | grep -q "xcrun"; then
              echo "found xcrun in the PATH, aborting..."
              exit 1
            else
              echo "no xcrun detected in the PATH, ...OK"
            fi

            # Bail if DEVELOPER_DIR is set
            if [ -z "${DEVELOPER_DIR+x}" ]; then
              echo "The environment variable DEVELOPER_DIR is unset, ...OK"
            else
              echo "The environment variable DEVELOPER_DIR is not unset, aborting..."
              exit 1
            fi'
